## Example of moproxy server list file.

# Each server starts with a unique `[SERVER-TAG]`,
# followed by a list of attributes.
#
# Use `moproxy [...] policy get [..]` to test it.
#
# Common attributes
# - address: IP-addr:port of the server.
# - protocol: HTTP or SOCKSv5.
# - test dns: IP-addr:port of a DNS server with TCP support.
# - score base: A fixed +/- integer added into server's score.
# - capabilities: List of capabilities, used by --policy rules.
#
# Attributes for SOCKSv5
# - socks username, socks password:
#     Username/password authentication (RFC 1929) for upstream proxy
#
# Attributes for HTTP
# - http username, http password:
#     HTTP basic access authentication for upstream proxy
#
# `address` and `protocol` are mandatory, others are optional.

[server-1]
address=127.0.0.1:2001 ;required
protocol=socks5 ;required
;all other attributes are optional

[server-2]
address=127.0.0.1:2002
protocol=http
http username = user
http password = pAsSwoRd ;optional upstream HTTP Basic Auth
test dns=127.0.0.53:53 ;use remote's local dns server to caculate delay
capabilities = cap1 cap2 ;used by policy rules

[server-3]
address=127.0.0.1:2003
protocol=http
; server-3 serves for port 8001 & 8002, while server-2 is only for
; port 8001. server-1 accepts connections coming from any ports specified
; by CLI argument --port.

[backup]
address=127.0.0.1:2002
protocol=socks5
socks username = user
socks password = pAsSwoRd
score base=5000 ;add 5k to pull away from preferred server.
max wait=10 ;waiting up to 10 seconds before give up.